#!/usr/bin/env python
"""Downscale and debias TraCE-21ka NetCDF files for use in LPJ-GUESS.

See README.md for more details.
"""

import os
import yaml
from termcolor import cprint
from trace_for_guess import
aggregate_modern_trace,
aggregate_monthly_means,
cat_files,
crop_file_list,
get_crujra_filenames,
get_cru_filenames,
get_trace_filenames,
rescale_file,
unzip_files_if_needed

opts = yaml.load(open("options.yaml"))
extent = opts["region"]["lon"] + opts["region"]["lat"]
# TODO: Check if region is valid.

# Directories:
heap = opts["directories"]["heap"]  # Any intermediary files
cropped_dir = os.path.join(heap, "cropped")  # Cropped files
debiased_dir = os.path.join(heap, "debiased")
rescaled_dir = os.path.join(heap, "split")  # Rescaled files
split_dir = os.path.join(heap, "split")  # Split, but not yet regridded files


# PREPARE CRU and CRU-JRA files ########################################


crujra_files = unzip_files_if_needed(
    filenames=get_crujra_filenames(),
    orig_dir=opts["directories"]["crujra_orig"],
    unzip_dir=os.path.join(heap, "unzipped"))
crujra_files = crop_file_list(crujra_files, cropped_dir, extent)
# TODO Calculate precipitation standard deviation

cru_files = unzip_files_if_needed(
    filenames=get_cru_filenames(),
    orig_dir=opts["directories"]["cru_orig"],
    unzip_dir=heap)
cru_mean_files = dict()  # Aggregated CRU files with variable as key.
for var in ['pre', 'tmp', 'wet']:
    # Filter list of all CRU files to file names containing `var`.
    files_with_var = [f for f in cru_files if var in f]
    cat = cat_files(filelist=files_with_var,
                    out_file=os.path.join(heap, '%s_cat.nc' % var))
    aggregated = os.path.join(heaps, "%s_mean.nc" % var)
    cru_mean_files[var] = aggregate_monthly_means(in_file=cat,
                                                  out_file=aggregated)


# PREPARE TraCE-21ka files #############################################


# TODO:
# Only select TraCE files that are in the desired time frame _plus_ the
# youngest files for calculating bias.

trace_files = get_trace_filenames()

for var in ['FSDS', 'PRECC', 'PRECL', 'TREFHT']:
    source = "trace.36.400BP-1990CE.cam2.h0.%s.2160101-2204012.nc" % var
    aggregate_modern_trace(trace_file=source, outfile='modern_trace_%s.nc' % var)

trace_files = crop_file_list(crujra_files, cropped_dir, extent)
split_trace_files = list()
for f in trace_files:
    split_trace_files += split_file(filename=f, out_dir=split_dir)

for f in split_trace_files:
    f = rescale_file(in_file=f,
                     out_file=os.path.join(rescaled_dir,
                                           os.path.basename(f)),
                     template_file=regrid_template_file,
                     alg=opts["regrid_algorithm"])

debias_file(in_file=f,
            bias_file=,#TODO
            out_file=os.path.join(debiased_dir,
                                  os.path.basename(f)))
    # Set Metadata
    # Compress
